{
  "version": 3,
  "sources": ["../../vue-route-middleware/src/index.js"],
  "sourcesContent": ["class VueRouteMiddleware {\r\n\r\n    /**\r\n     * Set instance properties and call defined \r\n     * middlewares on matching routes\r\n     * \r\n     * @param {object} definedMiddlewares \r\n     * @param {object} to \r\n     * @param {object} from \r\n     * @param {function|undefined} next\r\n     * \r\n     * @var {object} middlewares // predefined middlewares\r\n     * @var {boolean} nextHasCalled // if next was called in the middlewares\r\n     * @var {array} toMiddleware // arguments passed to middleware function\r\n     */\r\n    constructor(definedMiddlewares, to, from, next){\r\n        if(this._isObject(definedMiddlewares)){\r\n            this.middlewares = definedMiddlewares;\r\n        } else {\r\n            this._error('Defined middlewares must be of type Object!');\r\n            this.middlewares = {};\r\n        }\r\n        this.to = to;\r\n        this.from = from;\r\n        this.next = next;\r\n        this.nextHasCalled = false;\r\n        if(this.to && this.to.matched){ // Apply middleware if anu route matched\r\n            to.matched.every(route => this.applyRouteMiddlewares(route));\r\n        }\r\n        if(this.next && !this.nextHasCalled){ // call next if user didnt call it\r\n            this.callNext();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function used to pass arguments to middlewares with spred syntax\r\n     * \r\n     * @return {array}\r\n     */\r\n    toMiddleware(){\r\n        return [ \r\n            this.to, \r\n            this.from, \r\n            this._isFunction(this.next) ? \r\n                this.callNext.bind(this) : undefined\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Function that is passed to middleware as a next function wrapper\r\n     * toggling `nextHasCalled` trigger\r\n     * \r\n     * @param  {...any} args\r\n     */\r\n    callNext(...args){\r\n        if(!this.nextHasCalled) this.nextHasCalled = true;\r\n        return this.next(...args);\r\n    };\r\n\r\n    /**\r\n     * Fuction applying middlewares of a single route and deciding\r\n     * if other matched routes should be checked as well\r\n     * \r\n     * @param {*} route \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    applyRouteMiddlewares(route){\r\n        if(route.meta && route.meta.middleware){\r\n            let middlewareKeys = route.meta.middleware;\r\n            if(this._isArray(middlewareKeys)){\r\n                return middlewareKeys.every(middleware => this.applyMiddleware(middleware));\r\n            } else {\r\n                return this.applyMiddleware(middlewareKeys);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Function calling middlewares and deciding if middleware chain\r\n     * must be continued or stopped after first faliure\r\n     * \r\n     * @param {string|function} middleware \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    applyMiddleware(middleware){\r\n        const result = this.getMiddleware(middleware)(...this.toMiddleware());\r\n        return result === undefined ? true : result;\r\n    }\r\n\r\n    /**\r\n     * Function to get middleware function.\r\n     * In case of function validation failure\r\n     * console the error and return empty function\r\n     * \r\n     * @param {string|function} middleware \r\n     * \r\n     * @return {function}\r\n     */\r\n    getMiddleware(middleware){\r\n        if(this._isString(middleware)){\r\n            if(this.middlewares.hasOwnProperty(middleware)){\r\n                if(this._isFunction(this.middlewares[middleware])){\r\n                    return this.middlewares[middleware];\r\n                } else {\r\n                    this._error(middleware+' is not a function!');\r\n                }\r\n            }\r\n        } else if(this._isFunction(middleware)) {\r\n            return middleware;\r\n        } else {\r\n            this._error('All middlewares must be functions!');\r\n        }\r\n        return () => true;\r\n    }\r\n\r\n    /**\r\n     * @param {string} text \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    _error(text){\r\n        console.error(this.constructor.name + ': '+text);\r\n    }\r\n\r\n    /**\r\n     * @param {*} toCheck \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    _isString(toCheck){\r\n        return typeof toCheck === \"string\" || toCheck instanceof String;\r\n    }\r\n\r\n    /**\r\n     * @param {*} toCheck \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    _isArray(toCheck){\r\n        return Array.isArray(toCheck);\r\n    }\r\n\r\n    /**\r\n     * @param {*} toCheck \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    _isFunction(toCheck){\r\n        return typeof toCheck === \"function\";\r\n    }\r\n\r\n    /**\r\n     * @param {*} toCheck \r\n     * \r\n     * @return {boolean}\r\n     */\r\n    _isObject(toCheck){\r\n        return typeof toCheck === \"object\" && toCheck !== null;\r\n    }\r\n};\r\n\r\nexport default (definedGroups = {}) => {\r\n    return (...toMiddleware) => new VueRouteMiddleware(definedGroups, ...toMiddleware);\r\n};"],
  "mappings": "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",
  "names": ["VueRouteMiddleware", "definedMiddlewares", "to", "from", "next", "_isObject", "middlewares", "_error", "nextHasCalled", "matched", "every", "applyRouteMiddlewares", "route", "callNext", "_isFunction", "bind", "undefined", "meta", "middleware", "middlewareKeys", "_isArray", "applyMiddleware", "result", "getMiddleware", "toMiddleware", "_isString", "hasOwnProperty", "text", "console", "error", "constructor", "name", "toCheck", "String", "Array", "isArray", "definedGroups"]
}
